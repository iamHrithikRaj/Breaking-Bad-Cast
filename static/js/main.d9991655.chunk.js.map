{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/ui/Search.js","components/characters/CharacterItem.js","img/spinner.gif","components/ui/Spinner.js","components/characters/CharacterGrid.js","App.js","index.js"],"names":["Header","className","src","logo","alt","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","isLoading","items","map","char_id","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,MAA0B,iCCW1BA,EATA,WAEX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,QCiBjBC,EApBA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACJC,mBAAS,IADL,mBACpBC,EADoB,KACfC,EADe,KAM3B,OACI,yBAASR,UAAU,SAAnB,SACI,+BACI,uBAAOS,KAAK,OAAOT,UAAU,eAC7BU,YAAY,sBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAVJC,EAUkBD,EAAEE,OAAOJ,MATzCH,EAAQM,QACRT,EAASS,GAFI,IAACA,GAWNE,WAAS,SCeVC,EA7BO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACpB,OACE,qBAAKlB,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKiB,EAAKC,IAAKhB,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKkB,EAAKE,OACV,+BACE,+BACE,iDADF,IACgCF,EAAKG,aAErC,+BACE,+CADF,IAC8BH,EAAKI,YAEnC,+BACE,+CADF,IAC8BJ,EAAKK,YAEnC,+BACE,6CADF,IAC4BL,EAAKM,sBCtBhC,MAA0B,oCCQ1BC,EANC,WACZ,OACI,qBAAKxB,IAAKyB,EAASC,MAAO,CAACC,MAAO,QAASC,OAAQ,OAAOC,QAAQ,SAAU3B,IAAI,MCUzE4B,EAXO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MAC/B,OAAOD,EAAa,cAAC,EAAD,IAChB,yBAAShC,UAAU,QAAnB,SACKiC,EAAMC,KAAI,SAAAhB,GAAI,OACX,cAAC,EAAD,CACAA,KAAMA,GADcA,EAAKiB,eC2B1BC,EA3BH,WAAM,MAEU9B,mBAAS,IAFnB,mBAET2B,EAFS,KAEFI,EAFE,OAIkB/B,oBAAS,GAJ3B,mBAIT0B,EAJS,KAIEM,EAJF,OAKUhC,mBAAS,IALnB,mBAKTiC,EALS,KAKFC,EALE,KAkBhB,OAXAC,qBAAU,YAEQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAC8BJ,IAFvC,OACXK,EADW,OAIjBP,EAASO,EAAOC,MAChBP,GAAa,GALI,2CAAH,qDAOhBQ,KACC,CAACP,IAEF,sBAAKvC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQK,SAAU,SAACS,GAAO0B,EAAS1B,MACnC,cAAC,EAAD,CAAekB,UAAWA,EAAWC,MAAOA,QCzBlDc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9991655.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react'\nimport logo from '../../img/logo.png'\nconst Header = () => {\n\n    return (\n        <header className='center'>\n            <img src={logo} alt=\"\" />\n        </header>\n    )\n}\n\nexport default Header\n","// eslint-disable-next-line\nimport React, { useState } from 'react'\n\nconst Search = ({getQuery}) => {\n    const [text,setText] = useState('')\n    const onChange = (q) => {\n        setText(q)\n        getQuery(q)\n    }\n    return (\n        <section className=\"search\">\n            <form>\n                <input type=\"text\" className='form-control'\n                placeholder=\"Search Characters..\"\n                value={text}\n                onChange={(e)=>onChange(e.target.value)}\n                autoFocus\n                />\n            </form>\n        </section>\n    )\n}\n\nexport default Search\n","import React from 'react'\n\nconst CharacterItem = ({item}) => {\n    return (\n      <div className=\"card\">\n        <div className=\"card-inner\">\n          <div className=\"card-front\">\n            <img src={item.img} alt=\"\" />\n          </div>\n          <div className=\"card-back\">\n            <h1>{item.name}</h1>\n            <ul>\n              <li>\n                <strong>Actor Name:</strong> {item.portrayed}\n              </li>\n              <li>\n                <strong>Nickname:</strong> {item.nickname}\n              </li>\n              <li>\n                <strong>Birthday:</strong> {item.birthday}\n              </li>\n              <li>\n                <strong>Status:</strong> {item.status}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default CharacterItem\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\nimport spinner from '../../img/spinner.gif' \nconst Spinner = () => {\n    return (\n        <img src={spinner} style={{width: '200px', margin: 'auto',display:'block'}} alt=\"\"/>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport Spinner from '../ui/Spinner'\nconst CharacterGrid = ({isLoading, items}) => {\n    return isLoading ? (<Spinner />) : (\n        <section className=\"cards\">\n            {items.map(item => (\n                <CharacterItem key={item.char_id}\n                item={item}/>\n            ))}\n        </section>\n    )\n}\n\nexport default CharacterGrid\n","import \"./App.css\";\nimport axios from 'axios'\nimport Header from './components/ui/Header'\nimport Search from './components/ui/Search'\nimport CharacterGrid from './components/characters/CharacterGrid'\nimport React, {useState, useEffect} from \"react\";\n\nconst App = () => {\n  // eslint-disable-next-line\n  const [items, setItems] = useState([]);\n  // eslint-disable-next-line\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    const fetchItems = async () => {\n      const result = await axios(\n        `https://www.breakingbadapi.com/api/characters?name=${query}`\n      );\n      setItems(result.data);\n      setIsLoading(false)\n    };\n    fetchItems()\n  }, [query]);\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search getQuery={(q) => {setQuery(q)}}/>\n      <CharacterGrid isLoading={isLoading} items={items}/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}